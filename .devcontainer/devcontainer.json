// {
//     "build": {
//         "dockerfile": "Dockerfile",
//         "context": ".."
//     },
//     "runArgs": [
//         "-v", "/var/run/docker.sock:/var/run/docker.sock",
//         "mcr.microsoft.com/vscode/devcontainers/powershell:0-7-lts"
//     ]
// }

// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.202.3/containers/powershell

// {
//     "name": "PowerShell",
//     "build": {
//         "dockerfile": "Dockerfile",
//         "context": ".."
//     },

//     // Set *default* container specific settings.json values on container create.
//     "settings": {
//         "terminal.integrated.shell.linux": "/usr/bin/pwsh",
//         "powershell.powerShellExePath": "/usr/bin/pwsh"
//     },

//     // Add the IDs of extensions you want installed when the container is created.
//     "extensions": [
//         "ms-vscode.powershell"
//     ], 

//     // Use 'forwardPorts' to make a list of ports inside the container available locally.
//     "forwardPorts": [],

//     // Use 'postCreateCommand' to run commands after the container is created.
//     "postCreateCommand": "",

//     // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
//     // "mounts": [
//     //     "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
//     // ],

//     // Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
//     // "remoteUser": "vscode"
// }


{
    "name": ".NET in Codespaces",
    "image": "mcr.microsoft.com/dotnet/sdk:8.0",
    "features": {
        "ghcr.io/devcontainers/features/docker-in-docker:2": {},
        "ghcr.io/devcontainers/features/github-cli:1": {
            "version": "2"
        },
        "ghcr.io/devcontainers/features/powershell:1": {
            "version": "latest"
        },
        "ghcr.io/azure/azure-dev/azd:0": {
            "version": "latest"
        },
        "ghcr.io/devcontainers/features/common-utils:2": {},
        "ghcr.io/devcontainers/features/dotnet:2": {
            "version": "none",
            "dotnetRuntimeVersions": "7.0",
            "aspNetCoreRuntimeVersions": "7.0"
        }
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-vscode.vscode-node-azure-pack",
                "GitHub.copilot",
                "GitHub.vscode-github-actions",
                "ms-dotnettools.vscode-dotnet-runtime",
                "ms-dotnettools.csdevkit",
                "ms-dotnetools.csharp"
            ]
        }
    },
    "forwardPorts": [
        8080,
        8081
    ],
    "postCreateCommand": "cd ./SampleApp && dotnet restore",
    "hostRequirements": {
        "memory": "8gb",
        "cpus": 4
    },
    "remoteEnv": {
        "DOTNET_MULTILEVEL_LOOKUP": "0",
        "TARGET": "net8.0"
    },
    "portsAttributes": {
        "8080": {
            "label": "Weather API",
            "onAutoForward": "notify"
        },
        "8081": {
            "label": "Weather Front End",
            "onAutoForward": "notify"
        }
    }
}
